CREATE OR REPLACE TRANSIENT DATABASE
    streams_db;

-- Create example table
CREATE OR REPLACE TABLE
    sales_raw_staging(
        id VARCHAR,
        product VARCHAR,
        price VARCHAR,
        amount VARCHAR,
        store_id VARCHAR
    );

-- Insert values
INSERT INTO 
    sales_raw_staging
VALUES
    (
        1,'Banana',1.99,1,1
    ),
    (
        2,'Lemon',0.99,1,1
    ),
    (
        3,'Apple',1.79,1,2
    ),
    (
        4,'Orange Juice',1.89,1,2
    ),
    (
        5,'Cereals',5.98,2,1
    );

CREATE OR REPLACE TABLE
    store_table(
        store_id NUMBER,
        location VARCHAR,
        employees NUMBER
    );

INSERT INTO 
    store_table
VALUES
    (
        1,'Chicago',33
    ),
    (
        2,'London',12
    );

CREATE OR REPLACE TABLE
    sales_final_table
    (
        id INT,
        product VARCHAR,
        price NUMBER,
        amount INT,
        store_id INTEGER,
        location VARCHAR,
        employees INTEGER
    );

-- Insert into the final table
INSERT INTO 
    sales_final_table
SELECT
    sa.id,
    sa.product,
    sa.price,
    sa.amount,
    st.store_id,
    st.location,
    st.employees
FROM 
    sales_raw_staging SA
JOIN 
    store_table ST
ON 
    st.store_id=sa.store_id;

SELECT 
    *
FROM 
    streams_db.public.sales_final_table;

-- Create a stream object
CREATE OR REPLACE STREAM
    streams_db.public.sales_stream
ON TABLE
    streams_db.public.sales_raw_staging;

SHOW STREAMS;

DESCRIBE STREAM     
    streams_db.public.sales_stream;

-- Get changes on data using stream (INSERTS)
SELECT
    *
FROM 
    streams_db.public.sales_stream;

SELECT
    *
FROM 
    streams_db.public.sales_raw_staging;

-- Insert values into sales_raw_staging
INSERT INTO 
    sales_raw_staging
VALUES
    (
        6,'Mango',  1.99,1,2
    ),
    (
        7,'Garlic',  0.99,1,1
    );

--Now Changes will be reflected in the stream
SELECT
    *
FROM 
    streams_db.public.sales_stream;


SELECT
    *
FROM 
    streams_db.public.sales_raw_staging;
    
-- Changes from the streams are not reflected yet
SELECT 
    *
FROM 
    streams_db.public.sales_final_table;

-- Insert into the final table (this time from stream)
INSERT INTO 
    sales_final_table
SELECT
    sa.id,
    sa.product,
    sa.price,
    sa.amount,
    st.store_id,
    st.location,
    st.employees
FROM 
    sales_stream SA
JOIN 
    store_table ST
ON 
    st.store_id=sa.store_id;

SELECT 
    *
FROM 
     streams_db.public.sales_final_table;


--Stream is now consumed, hence it will be empty
SELECT
    *
FROM 
    streams_db.public.sales_stream;

-- Repeating once more

INSERT INTO 
    sales_raw_staging
VALUES
    (
        8,'Paprica',  4.99,1,2
    ),
    (
        9,'Tomato',  3.99,1,2
    );

SELECT
    *
FROM 
    streams_db.public.sales_stream;

INSERT INTO 
    sales_final_table
SELECT
    sa.id,
    sa.product,
    sa.price,
    sa.amount,
    st.store_id,
    st.location,
    st.employees
FROM 
    sales_stream SA
JOIN 
    store_table ST
ON 
    st.store_id=sa.store_id;

SELECT 
    *
FROM 
     streams_db.public.sales_final_table;

SELECT
    *
FROM 
    streams_db.public.sales_stream;
